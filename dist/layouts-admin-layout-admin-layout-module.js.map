{"version":3,"sources":["./node_modules/ngx-clipboard/__ivy_ngcc__/fesm5/ngx-clipboard.js","./node_modules/ngx-window-token/__ivy_ngcc__/fesm5/ngx-window-token.js","./src/app/pages/articoli/articoli.component.html","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/etichette/etichette.component.html","./src/app/pages/location/location.component.html","./src/app/pages/smartmatch/smartmatch.component.html","./src/app/pages/visualizzarticolo/visualizzarticolo.component.html","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/pages/articoli/articoli.component.scss","./src/app/pages/articoli/articoli.component.ts","./src/app/pages/dashboard/dashboard.component.scss","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/etichette/etichette.component.scss","./src/app/pages/etichette/etichette.component.ts","./src/app/pages/location/location.component.scss","./src/app/pages/location/location.component.ts","./src/app/pages/smartmatch/smartmatch.component.scss","./src/app/pages/smartmatch/smartmatch.component.ts","./src/app/pages/visualizzarticolo/visualizzarticolo.component.css","./src/app/pages/visualizzarticolo/visualizzarticolo.component.ts","./src/app/variables/system.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACa;AACiI;AAChJ;AACX;;AAE/B;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qCAAqC;AAC/E;AACA;AACA;AACA,0CAA0C,0CAA0C;AACpF;AACA,sCAAsC,qCAAqC;AAC3E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uDAAM,IAAI;AAC7F,MAAM;AACN,6BAA6B,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,wDAAQ,GAAG,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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["import { __decorate, __param } from 'tslib';\r\nimport { DOCUMENT, CommonModule } from '@angular/common';\r\nimport { Inject, Optional, ɵɵdefineInjectable, ɵɵinject, Injectable, EventEmitter, Input, Output, HostListener, Directive, ViewContainerRef, TemplateRef, NgModule } from '@angular/core';\r\nimport { WINDOW } from 'ngx-window-token';\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nvar ClipboardService = /** @class */ (function () {\r\n    function ClipboardService(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n        this.copySubject = new Subject();\r\n        this.copyResponse$ = this.copySubject.asObservable();\r\n        this.config = {};\r\n    }\r\n    ClipboardService.prototype.configure = function (config) {\r\n        this.config = config;\r\n    };\r\n    ClipboardService.prototype.copy = function (content) {\r\n        if (!this.isSupported || !content) {\r\n            return this.pushCopyResponse({ isSuccess: false, content: content });\r\n        }\r\n        var copyResult = this.copyFromContent(content);\r\n        if (copyResult) {\r\n            return this.pushCopyResponse({ content: content, isSuccess: copyResult });\r\n        }\r\n        return this.pushCopyResponse({ isSuccess: false, content: content });\r\n    };\r\n    Object.defineProperty(ClipboardService.prototype, \"isSupported\", {\r\n        get: function () {\r\n            return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClipboardService.prototype.isTargetValid = function (element) {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    };\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    ClipboardService.prototype.copyFromInputElement = function (targetElm, isFocus) {\r\n        if (isFocus === void 0) { isFocus = true; }\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            var re = this.copyText();\r\n            this.clearSelection(isFocus ? targetElm : undefined, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    ClipboardService.prototype.isCopySuccessInIE11 = function () {\r\n        var clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    ClipboardService.prototype.copyFromContent = function (content, container) {\r\n        if (container === void 0) { container = this.document.body; }\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            }\r\n            catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n        var toReturn = this.copyFromInputElement(this.tempTextArea, false);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        return toReturn;\r\n    };\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    ClipboardService.prototype.destroy = function (container) {\r\n        if (container === void 0) { container = this.document.body; }\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    ClipboardService.prototype.selectTarget = function (inputElement) {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    };\r\n    ClipboardService.prototype.copyText = function () {\r\n        return this.document.execCommand('copy');\r\n    };\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    ClipboardService.prototype.clearSelection = function (inputElement, window) {\r\n        inputElement && inputElement.focus();\r\n        window.getSelection().removeAllRanges();\r\n    };\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    ClipboardService.prototype.createTempTextArea = function (doc, window) {\r\n        var isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        var ta;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        var yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    };\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    ClipboardService.prototype.pushCopyResponse = function (response) {\r\n        this.copySubject.next(response);\r\n    };\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    ClipboardService.prototype.pushCopyReponse = function (response) {\r\n        this.pushCopyResponse(response);\r\n    };\r\n    ClipboardService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [WINDOW,] }] }\r\n    ]; };\r\n    ClipboardService.ɵprov = ɵɵdefineInjectable({ factory: function ClipboardService_Factory() { return new ClipboardService(ɵɵinject(DOCUMENT), ɵɵinject(WINDOW, 8)); }, token: ClipboardService, providedIn: \"root\" });\r\n    ClipboardService = __decorate([ __param(0, Inject(DOCUMENT)), __param(1, Optional()), __param(1, Inject(WINDOW))\r\n    ], ClipboardService);\r\nClipboardService.ɵfac = function ClipboardService_Factory(t) { return new (t || ClipboardService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(WINDOW, 8)); };\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardService, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [WINDOW]\r\n            }] }]; }, null); })();\r\n    return ClipboardService;\r\n}());\r\n\r\nvar ClipboardDirective = /** @class */ (function () {\r\n    function ClipboardDirective(clipboardSrv) {\r\n        this.clipboardSrv = clipboardSrv;\r\n        this.cbOnSuccess = new EventEmitter();\r\n        this.cbOnError = new EventEmitter();\r\n    }\r\n    // tslint:disable-next-line:no-empty\r\n    ClipboardDirective.prototype.ngOnInit = function () { };\r\n    ClipboardDirective.prototype.ngOnDestroy = function () {\r\n        this.clipboardSrv.destroy(this.container);\r\n    };\r\n    ClipboardDirective.prototype.onClick = function (event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        }\r\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        }\r\n        else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    };\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param succeeded\r\n     */\r\n    ClipboardDirective.prototype.handleResult = function (succeeded, copiedContent, event) {\r\n        var response = {\r\n            isSuccess: succeeded,\r\n            event: event\r\n        };\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        }\r\n        else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n        this.clipboardSrv.pushCopyResponse(response);\r\n    };\r\n    ClipboardDirective.ctorParameters = function () { return [\r\n        { type: ClipboardService }\r\n    ]; };\r\n    __decorate([\r\n        Input('ngxClipboard')\r\n    ], ClipboardDirective.prototype, \"targetElm\", void 0);\r\n    __decorate([\r\n        Input()\r\n    ], ClipboardDirective.prototype, \"container\", void 0);\r\n    __decorate([\r\n        Input()\r\n    ], ClipboardDirective.prototype, \"cbContent\", void 0);\r\n    __decorate([\r\n        Input()\r\n    ], ClipboardDirective.prototype, \"cbSuccessMsg\", void 0);\r\n    __decorate([\r\n        Output()\r\n    ], ClipboardDirective.prototype, \"cbOnSuccess\", void 0);\r\n    __decorate([\r\n        Output()\r\n    ], ClipboardDirective.prototype, \"cbOnError\", void 0);\r\n    __decorate([\r\n        HostListener('click', ['$event.target'])\r\n    ], ClipboardDirective.prototype, \"onClick\", null);\r\nClipboardDirective.ɵfac = function ClipboardDirective_Factory(t) { return new (t || ClipboardDirective)(ɵngcc0.ɵɵdirectiveInject(ClipboardService)); };\r\nClipboardDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClipboardDirective, selectors: [[\"\", \"ngxClipboard\", \"\"]], hostBindings: function ClipboardDirective_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function ClipboardDirective_click_HostBindingHandler($event) { return ctx.onClick($event.target); });\r\n    } }, inputs: { targetElm: [\"ngxClipboard\", \"targetElm\"], container: \"container\", cbContent: \"cbContent\", cbSuccessMsg: \"cbSuccessMsg\" }, outputs: { cbOnSuccess: \"cbOnSuccess\", cbOnError: \"cbOnError\" } });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[ngxClipboard]'\r\n            }]\r\n    }], function () { return [{ type: ClipboardService }]; }, { cbOnSuccess: [{\r\n            type: Output\r\n        }], cbOnError: [{\r\n            type: Output\r\n        }], onClick: [{\r\n            type: HostListener,\r\n            args: ['click', ['$event.target']]\r\n        }], targetElm: [{\r\n            type: Input,\r\n            args: ['ngxClipboard']\r\n        }], container: [{\r\n            type: Input\r\n        }], cbContent: [{\r\n            type: Input\r\n        }], cbSuccessMsg: [{\r\n            type: Input\r\n        }] }); })();\r\n    return ClipboardDirective;\r\n}());\r\n\r\nvar ClipboardIfSupportedDirective = /** @class */ (function () {\r\n    function ClipboardIfSupportedDirective(_clipboardService, _viewContainerRef, _templateRef) {\r\n        this._clipboardService = _clipboardService;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._templateRef = _templateRef;\r\n    }\r\n    ClipboardIfSupportedDirective.prototype.ngOnInit = function () {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    };\r\n    ClipboardIfSupportedDirective.ctorParameters = function () { return [\r\n        { type: ClipboardService },\r\n        { type: ViewContainerRef },\r\n        { type: TemplateRef }\r\n    ]; };\r\nClipboardIfSupportedDirective.ɵfac = function ClipboardIfSupportedDirective_Factory(t) { return new (t || ClipboardIfSupportedDirective)(ɵngcc0.ɵɵdirectiveInject(ClipboardService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nClipboardIfSupportedDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClipboardIfSupportedDirective, selectors: [[\"\", \"ngxClipboardIfSupported\", \"\"]] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardIfSupportedDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[ngxClipboardIfSupported]'\r\n            }]\r\n    }], function () { return [{ type: ClipboardService }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }]; }, null); })();\r\n    return ClipboardIfSupportedDirective;\r\n}());\r\n\r\nvar ClipboardModule = /** @class */ (function () {\r\n    function ClipboardModule() {\r\n    }\r\nClipboardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });\r\nClipboardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); }, imports: [[CommonModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: function () { return [ClipboardDirective,\r\n        ClipboardIfSupportedDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ClipboardDirective,\r\n        ClipboardIfSupportedDirective]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [CommonModule],\r\n                declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\r\n                exports: [ClipboardDirective, ClipboardIfSupportedDirective]\r\n            }]\r\n    }], function () { return []; }, null); })();\r\n    return ClipboardModule;\r\n}());\r\n\r\n/*\r\n * Public API Surface of ngx-clipboard\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { ClipboardDirective, ClipboardIfSupportedDirective, ClipboardModule, ClipboardService };\r\n\r\n//# sourceMappingURL=ngx-clipboard.js.map","import { InjectionToken } from '@angular/core';\r\n\r\nvar WINDOW = new InjectionToken('WindowToken', typeof window !== 'undefined' && window.document ? { providedIn: 'root', factory: function () { return window; } } : undefined);\r\n\r\n/*\r\n * Public API Surface of ngx-window-token\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { WINDOW };\r\n\r\n//# sourceMappingURL=ngx-window-token.js.map","export default \"<div class=\\\"header bg-gradient-info pb-8 pt-5 pt-md-5\\\"></div>\\r\\n<!-- Modal DELETE Item -->\\r\\n<ng-template #content let-modal>\\r\\n  <div class=\\\"modal-header\\\"  data-backdrop=\\\"static\\\">\\r\\n    <h4 i18n class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Conferma eliminazione</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p i18n>Sicuro di voler eliminare l'articolo <strong>{{ alias }}</strong>?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button i18n class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem()\\\" type=\\\"button\\\">Elimina</button>\\r\\n    <button i18n type=\\\"button\\\" class=\\\"btn btn-outline-default\\\" (click)=\\\"modal.close()\\\">Anulla</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<!-- Modal DELETE Multiple Items -->\\r\\n<ng-template #multiple let-modal>\\r\\n  <div class=\\\"modal-header\\\"  data-backdrop=\\\"static\\\">\\r\\n    <h4 i18n class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Conferma eliminazione multipla</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p i18n>Sicuro di voler eliminare i <strong>{{ index }}</strong> articoli selezionati?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button i18n class=\\\"btn btn-danger\\\" (click)=\\\"deleteMultiple()\\\" type=\\\"button\\\">Elimina</button>\\r\\n    <button i18n type=\\\"button\\\" class=\\\"btn btn-outline-default\\\" (click)=\\\"modal.close()\\\">Anulla</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<!-- Contenuto della pagina -->\\r\\n<div class=\\\"container-fluid mt--7\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <!-- Alert Conferma Eliminazione -->\\r\\n          <ngb-alert *ngIf=\\\"successMessage\\\" type=\\\"danger\\\" (close)=\\\"successMessage = ''\\\">{{ successMessage }}</ngb-alert>\\r\\n          <h2 i18n class=\\\"mb-0\\\">Lista Articoli</h2>\\r\\n          <!-- Elimina o Crea Nuovo Articolo -->\\r\\n          <div class=\\\"text-right\\\">\\r\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n              <button i18n class=\\\"btn btn-outline-info\\\" id=\\\"delItemBtn\\\" (click)=\\\"checkAll()\\\">\\r\\n              Seleziona Tutto <span *ngIf=\\\"index != 0\\\">({{ index }})</span>\\r\\n              </button>\\r\\n              <button i18n *ngIf=\\\"index != 0\\\" class=\\\"btn btn-outline-danger\\\" id=\\\"delItemBtn\\\" (click)=\\\"open(multiple)\\\">\\r\\n              <i class=\\\"fa fa-trash\\\"></i> Elimina Selezionati\\r\\n              </button>\\r\\n              <button i18n class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\r\\n              <i class=\\\"fas fa-caret-down\\\"></i> Crea Nuovo\\r\\n              </button>\\r\\n              <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n                <button ngbDropdownItem *ngFor=\\\"let item of items_t\\\" [value]=\\\"item.id\\\" (click)=\\\"addItem(item.id)\\\">{{ item.name }}</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Card Body -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- Tabella Articoli -->\\r\\n          <div class=\\\"table-responsive\\\" id=\\\"stampare\\\">\\r\\n            <table class=\\\"display table table-striped align-items-center table-flush\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th i18n scope=\\\"col\\\"></th>\\r\\n                <th i18n scope=\\\"col\\\">Alias</th>\\r\\n                <th i18n scope=\\\"col\\\">ID Customer</th>\\r\\n                <!-- <th scope=\\\"col\\\">ID Database</th> -->\\r\\n                <th i18n scope=\\\"col\\\">Data Revisione</th>\\r\\n                <th i18n scope=\\\"col\\\">Tipo</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody id=\\\"stampare\\\">\\r\\n              <tr *ngFor=\\\"let item of items$\\\">\\r\\n                <td>\\r\\n                  <!-- Checkbox -->&nbsp;\\t\\r\\n                  <input type=\\\"checkbox\\\" #checkboxes class=\\\"form-check-input\\\" id=\\\"{{ item.id }}\\\" (change)=\\\"ngOnSelected()\\\">\\r\\n                  <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Tools\\\">\\r\\n                    <!-- Elimina Item con Modal -->\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"open(content, item.id, item.reserved_alias)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </td>\\r\\n                <th>\\r\\n                  <a [routerLink]=\\\"\\\" (click)=\\\"viewItem(item.id)\\\">{{ item.reserved_alias }}</a>\\r\\n                </th>\\r\\n                <td>{{ item.item_identifier }}</td>\\r\\n                <!-- <td>{{ item.id }}</td> -->\\r\\n                <td>{{ item.current_revision_date }}</td>\\r\\n                <td>{{ item.item_type }}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<!-- Sfondo Header e Cards -->\\r\\n<div class=\\\"header bg-gradient-info pb-8 pt-5 pt-md-6\\\">\\r\\n    <div class=\\\"d-lg-none\\\">\\r\\n       <br><br>\\r\\n    </div>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n       <div class=\\\"header-body\\\">\\r\\n          <!-- Info Cards -->\\r\\n          <div class=\\\"row\\\">\\r\\n             <!-- Sistema -->\\r\\n             <div class=\\\"col-xl-4 col-lg-6\\\">\\r\\n                <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\r\\n                   <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                         <div class=\\\"col\\\">\\r\\n                            <h5 i18n class=\\\"card-title text-uppercase text-muted mb-0\\\">Informazioni</h5>\\r\\n                            <span class=\\\"h2 font-weight-bold mb-0\\\">{{ varInstName }}</span>\\r\\n                         </div>\\r\\n                         <div class=\\\"col-auto\\\">\\r\\n                            <div class=\\\"icon icon-shape bg-default text-white rounded-circle shadow\\\">\\r\\n                               <i class=\\\"ni ni-settings\\\"></i>\\r\\n                            </div>\\r\\n                         </div>\\r\\n                      </div>\\r\\n                      <p class=\\\"mt-3 mb-0 text-muted text-sm\\\">\\r\\n                         <span class=\\\"text-success mr-2\\\">{{ varInstallationType }}</span>\\r\\n                         <span i18n class=\\\"text-nowrap\\\">Tipologia installazione</span>\\r\\n                      </p>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <!-- Etichette -->\\r\\n             <div class=\\\"col-xl-4 col-lg-6\\\">\\r\\n                <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\r\\n                   <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                         <div class=\\\"col\\\">\\r\\n                            <h5 i18n class=\\\"card-title text-uppercase text-muted mb-0\\\">Etichette online</h5>\\r\\n                            <span class=\\\"h2 font-weight-bold mb-0\\\">{{ labelOnline }}</span>\\r\\n                         </div>\\r\\n                         <div class=\\\"col-auto\\\">\\r\\n                            <div class=\\\"icon icon-shape bg-success text-white rounded-circle shadow\\\">\\r\\n                               <i class=\\\"ni ni-button-play\\\"></i>\\r\\n                            </div>\\r\\n                         </div>\\r\\n                      </div>\\r\\n                      <p class=\\\"mt-3 mb-0 text-muted text-sm\\\">\\r\\n                         <span class=\\\"text-danger mr-2\\\">{{ labelOffline }}</span>\\r\\n                         <span i18n class=\\\"text-nowrap\\\">Etichette offline</span>\\r\\n                      </p>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <!-- Batterie -->\\r\\n             <div class=\\\"col-xl-4 col-lg-6\\\">\\r\\n                <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\r\\n                   <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                         <div class=\\\"col\\\">\\r\\n                            <h5 i18n class=\\\"card-title text-uppercase text-muted mb-0\\\">Batterie scariche</h5>\\r\\n                            <span class=\\\"h2 font-weight-bold mb-0\\\">{{ batteryBad }}</span>\\r\\n                         </div>\\r\\n                         <div class=\\\"col-auto\\\">\\r\\n                            <div class=\\\"icon icon-shape bg-warning text-white rounded-circle shadow\\\">\\r\\n                               <i class=\\\"ni ni-button-power\\\"></i>\\r\\n                            </div>\\r\\n                         </div>\\r\\n                      </div>\\r\\n                      <p class=\\\"mt-3 mb-0 text-muted text-sm\\\">\\r\\n                         <span class=\\\"text-success mr-2\\\">{{ batteryGood }}</span>\\r\\n                         <span i18n class=\\\"text-nowrap\\\">In buono stato</span>\\r\\n                      </p>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <!-- Contenuto della Dashboard -->\\r\\n <div class=\\\"container-fluid mt--7\\\" id=\\\"stampare\\\">\\r\\n    <!-- Prima riga -->\\r\\n    <div class=\\\"row\\\">\\r\\n       <!-- Informazioni Installazione & Templates -->\\r\\n       <div class=\\\"col-xl-4\\\">\\r\\n          <!-- Informazioni Installazione -->\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <!-- Header Info -->\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                   <div class=\\\"col\\\">\\r\\n                      <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Installazione</h6>\\r\\n                      <h2 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-info-circle\\\"></i> Informazioni Installazione</h2>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <!-- Contenuto Info -->\\r\\n             <div class=\\\"card-body\\\">\\r\\n                <p i18n class=\\\"card-text\\\">Nome: <strong>{{ varInstName }}</strong></p>\\r\\n                <p i18n class=\\\"card-text\\\">Tipologia: <strong>{{ varInstallationType }}</strong></p>\\r\\n                <ng-template [ngIf]=\\\"varInstallationType == 'multistore'\\\">\\r\\n                   <p i18n class=\\\"card-text\\\">Ruolo: <i class=\\\"fab fa-linode\\\" aria-hidden=\\\"true\\\"></i><strong> Nodo</strong></p>\\r\\n                </ng-template>\\r\\n                <p i18n class=\\\"card-text\\\">Import patch: <strong>{{ importBasePath }}</strong></p>\\r\\n             </div>\\r\\n          </div>\\r\\n          <br>\\r\\n          <!-- Templates -->\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <!-- Header -->\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                   <div class=\\\"col\\\">\\r\\n                      <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Lista Custom Templates</h6>\\r\\n                      <h2 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-crop\\\"></i> Templates</h2>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <!-- Contenuto -->\\r\\n             <div class=\\\"card-body\\\">\\r\\n                <!-- Form di aggiunta template\\r\\n                   <form>\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label for=\\\"exampleFormControlFile1\\\">Importa da file</label>\\r\\n                           <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"exampleFormControlFile1\\\">\\r\\n                       </div>\\r\\n                   </form>\\r\\n                   <br/>  -->\\r\\n                <!-- Scegli Tipologia Template -->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <label i18n for=\\\"itemType\\\">Tiplogia</label>\\r\\n                   <select [(ngModel)]=\\\"selectedOption\\\" class=\\\"form-control\\\" name=\\\"itemType\\\" id=\\\"itemType\\\" (click)=\\\"getItemTypeTemplate($event.target.value)\\\">\\r\\n                   <option *ngFor=\\\"let item of varItem\\\" [value]=\\\"item.id\\\">{{ item.name }}</option>\\r\\n                   </select>\\r\\n                </div>\\r\\n                <!-- Lista templates -->\\r\\n                <label i18n>Lista Template</label>\\r\\n                <ul class=\\\"list-group list-group-flush\\\">\\r\\n                   <li class=\\\"list-group-item\\\" *ngFor=\\\"let template of templates\\\">\\r\\n                      <small>{{ template.title }}</small>\\r\\n                   </li>\\r\\n                </ul>\\r\\n             </div>\\r\\n          </div>\\r\\n          <br>\\r\\n       </div>\\r\\n       <!-- Display Etichette & APs -->\\r\\n       <div class=\\\"col-xl-4\\\">\\r\\n          <!-- Display Etichette -->\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <!-- Display -->\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                   <div class=\\\"col\\\">\\r\\n                      <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Display</h6>\\r\\n                      <h2 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-desktop\\\"></i> Display</h2>\\r\\n                      <small i18n>Stato display a disposizione</small>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <!-- Etichette-->\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                   <div class=\\\"col\\\">\\r\\n                      <h2 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-tags\\\"></i> Etichette</h2>\\r\\n                      <!-- Stato etichette -->\\r\\n                      <p i18n class=\\\"card-text\\\">Online <span class=\\\"badge badge-success\\\">{{ labelOnline }}</span> - Offline <span class=\\\"badge badge-danger\\\">{{ labelOffline }}</span></p>\\r\\n                      <p i18n class=\\\"card-text\\\">Battery Good <span class=\\\"badge badge-success\\\">{{ batteryGood }}</span> - Battery Bad <span class=\\\"badge badge-danger\\\">{{ batteryBad }}</span></p>\\r\\n                      <p i18n class=\\\"card-text\\\">Totale Etichette Match Attivi <span class=\\\"badge badge-success\\\">{{ varTotMatch }}</span></p>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>\\r\\n          <br>\\r\\n          <!-- APs -->\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <!-- Header -->\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                   <div class=\\\"col\\\">\\r\\n                      <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">APs</h6>\\r\\n                      <h2 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-wifi\\\"></i> Access Points <span class=\\\"badge badge-pill badge-default\\\">{{ totalAP }}</span></h2>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <!-- Contenuto -->\\r\\n             <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                   <table class=\\\"table align-items-center table-flush\\\">\\r\\n                      <thead class=\\\"thead-light\\\">\\r\\n                         <tr>\\r\\n                            <th i18n scope=\\\"col\\\">ID</th>\\r\\n                            <th i18n scope=\\\"col\\\">Stato</th>\\r\\n                            <th i18n scope=\\\"col\\\">Nome</th>\\r\\n                            <th i18n scope=\\\"col\\\">Versione</th>\\r\\n                            <th i18n scope=\\\"col\\\">IP</th>\\r\\n                         </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                         <tr *ngFor=\\\"let ap of ap$\\\">\\r\\n                            <th>{{ ap.id }}</th>\\r\\n                            <td>{{ ap.connection_status }}</td>\\r\\n                            <td>{{ ap.name }}</td>\\r\\n                            <td>{{ ap.version }}</td>\\r\\n                            <td>{{ ap.ip }}</td>\\r\\n                         </tr>\\r\\n                      </tbody>\\r\\n                   </table>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n       <!-- Articoli & Importazioni -->\\r\\n       <div class=\\\"col-xl-4\\\">\\r\\n          <!-- Articoli -->\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <!-- Header -->\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                   <div class=\\\"col\\\">\\r\\n                      <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Oggetti</h6>\\r\\n                      <h2 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-list\\\"></i> Articoli <span class=\\\"badge badge-pill badge-default\\\">{{ varTotItem }}</span></h2>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <div class=\\\"card-body\\\">\\r\\n                <!-- Contenuto -->\\r\\n                <h3 i18n>Tipologie di articoli <span class=\\\"badge badge-pill badge-default\\\">{{ totalItemType }}</span></h3>\\r\\n                <!-- Tabella -->\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                   <table class=\\\"table align-items-center table-flush\\\">\\r\\n                      <!-- Intestazione tabella -->\\r\\n                      <thead class=\\\"thead-light\\\">\\r\\n                         <tr>\\r\\n                            <th i18n scope=\\\"col\\\">Tipo</th>\\r\\n                            <th i18n scope=\\\"col\\\">Tiplogia</th>\\r\\n                            <th i18n scope=\\\"col\\\">Propagabile</th>\\r\\n                         </tr>\\r\\n                      </thead>\\r\\n                      <!-- Contenuto tabella -->\\r\\n                      <tbody>\\r\\n                         <tr *ngFor=\\\"let item of varItem\\\">\\r\\n                            <th>{{ item.id }}</th>\\r\\n                            <td>{{ item.name }}</td>\\r\\n                            <td>\\r\\n                               <div *ngIf=\\\"item.propagable == true; else elseBlock\\\"><span i18n class=\\\"badge badge-success\\\">SI</span></div>\\r\\n                               <ng-template #elseBlock><span i18n class=\\\"badge badge-danger\\\">NO</span></ng-template>\\r\\n                            </td>\\r\\n                         </tr>\\r\\n                      </tbody>\\r\\n                   </table>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>\\r\\n          <br>\\r\\n          <!-- Importazioni -->\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                   <div class=\\\"col\\\">\\r\\n                      <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Dati</h6>\\r\\n                      <h2 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-file-import\\\"></i> Importazioni</h2>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <div class=\\\"card-body\\\">\\r\\n                <!-- Tabella Importazioni -->\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                   <table class=\\\"table align-items-center table-flush\\\">\\r\\n                      <thead class=\\\"thead-light\\\">\\r\\n                         <tr>\\r\\n                            <th i18n scope=\\\"col\\\">Ultima Importazione</th>\\r\\n                            <th i18n scope=\\\"col\\\">Numero Articoli</th>\\r\\n                         </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                         <tr *ngFor=\\\"let import of varImport\\\">\\r\\n                            <th>{{ import.end_process_date }}</th>\\r\\n                            <td>{{ import.updated_items }}</td>\\r\\n                         </tr>\\r\\n                      </tbody>\\r\\n                   </table>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <!-- Terza riga: Device mobili -->\\r\\n    <div class=\\\"row\\\">\\r\\n       <div class=\\\"col\\\">\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <h3 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-mobile-alt\\\"></i> Device mobili</h3>\\r\\n             </div>\\r\\n             <div class=\\\"table-responsive\\\">\\r\\n                <!-- Tabella Device mobili -->\\r\\n                <table class=\\\"table align-items-center table-flush\\\">\\r\\n                   <thead class=\\\"thead-light\\\">\\r\\n                      <tr>\\r\\n                         <th i18n scope=\\\"col\\\">ID</th>\\r\\n                         <th i18n scope=\\\"col\\\">IMEI</th>\\r\\n                         <th i18n scope=\\\"col\\\">Nome</th>\\r\\n                         <th i18n scope=\\\"col\\\">Firebase ID</th>\\r\\n                         <th i18n scope=\\\"col\\\">Ultimo login</th>\\r\\n                      </tr>\\r\\n                   </thead>\\r\\n                   <tbody>\\r\\n                      <tr *ngFor=\\\"let mobile of varMobile\\\">\\r\\n                         <th>{{ mobile.id }}</th>\\r\\n                         <td>{{ mobile.imei }}</td>\\r\\n                         <td>{{ mobile.device_name }}</td>\\r\\n                         <td>\\r\\n                            <div *ngIf=\\\"mobile.firebase_id != null; else elseBlock\\\"><i class=\\\"fas fa-check-circle\\\"></i></div>\\r\\n                            <ng-template #elseBlock><i class=\\\"fas fa-times-circle\\\"></i></ng-template>\\r\\n                         </td>\\r\\n                         <td>{{ mobile.last_modified_date }}</td>\\r\\n                      </tr>\\r\\n                   </tbody>\\r\\n                </table>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <!-- Quarta riga: Info Sistema -->\\r\\n    <div class=\\\"row\\\">\\r\\n       <div class=\\\"col\\\">\\r\\n          <div class=\\\"card shadow\\\">\\r\\n             <div class=\\\"card-header bg-transparent\\\">\\r\\n                <h3 i18n class=\\\"mb-0\\\"><i class=\\\"fas fa-rocket\\\"></i> Stato Sistema e Versioni Software</h3>\\r\\n             </div>\\r\\n             <!-- Informazioni sul sistema -->\\r\\n             <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                   <div class=\\\"col-xl-3\\\">\\r\\n                      <h4 i18n><i class=\\\"far fa-hdd\\\"></i> Sistema </h4>\\r\\n                      <div class=\\\"progress-wrapper progress-info\\\">\\r\\n                         <div class=\\\"progress-label\\\">\\r\\n                            <span i18n>Free Disk Space*</span>\\r\\n                         </div>\\r\\n                         <div class=\\\"progress-percentage\\\">\\r\\n                            <span>{{ system_info.system_disk_free_space / system_info.system_disk_total_space * 100.0 | number }}%</span>\\r\\n                         </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"progress\\\">\\r\\n                         <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: {{ system_info.system_disk_free_space / system_info.system_disk_total_space * 100.0 }}%;\\\"></div>\\r\\n                      </div>\\r\\n                      <p i18n class=\\\"card-text\\\">Boot Time: <strong>{{ system_info.system_boot_time }}</strong></p>\\r\\n                      <p i18n class=\\\"card-text\\\">Disk Total Space: <strong>{{ system_info.system_disk_total_space }} GB</strong></p>\\r\\n                      <p i18n class=\\\"card-text\\\">Disk Free Space: <strong>{{ system_info.system_disk_free_space }} GB</strong></p>\\r\\n                   </div>\\r\\n                   <div class=\\\"col-xl-2\\\">\\r\\n                      <h4 i18n><i class=\\\"fas fa-code\\\"></i> PHP <span class=\\\"badge badge-pill badge-info\\\">{{ system_info.php_version }}</span></h4>\\r\\n                      <p i18n class=\\\"card-text\\\">PHP version: <strong>{{ system_info.php_version }}</strong></p>\\r\\n                   </div>\\r\\n                   <div class=\\\"col-xl-2\\\">\\r\\n                      <h4 i18n><i class=\\\"fas fa-feather-alt\\\"></i> Apache <span class=\\\"badge badge-pill badge-info\\\">{{ system_info.apache_version }}</span></h4>\\r\\n                      <p i18n class=\\\"card-text\\\">Apache version: <strong>{{ system_info.apache_version }}</strong></p>\\r\\n                      <p i18n class=\\\"card-text\\\">Apache uptime: <strong>{{ system_info.apache_uptime }}</strong></p>\\r\\n                   </div>\\r\\n                   <div class=\\\"col-xl-2\\\">\\r\\n                      <h4 i18n><i class=\\\"fas fa-database\\\"></i> MongoDB <span class=\\\"badge badge-pill badge-info\\\">{{ system_info.mongodb_version }}</span></h4>\\r\\n                      <p i18n class=\\\"card-text\\\">MongoDB version: <strong>{{ system_info.mongodb_version }}</strong></p>\\r\\n                      <p i18n class=\\\"card-text\\\">MongoDB uptime: <strong>{{ system_info.mongodb_uptime }}</strong></p>\\r\\n                   </div>\\r\\n                   <div class=\\\"col-xl-2\\\">\\r\\n                      <h4 i18n><i class=\\\"fas fa-database\\\"></i> MariaDB <span class=\\\"badge badge-pill badge-info\\\">{{ system_info.mariadb_version }}</span></h4>\\r\\n                      <p i18n class=\\\"card-text\\\">MariaDB version: <strong>{{ system_info.mariadb_version }}</strong></p>\\r\\n                      <p i18n class=\\\"card-text\\\">MariaDB uptime: <strong>{{ system_info.mariadb_uptime }}</strong></p>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\"","export default \"<div class=\\\"header bg-gradient-info pb-8 pt-5 pt-md-5\\\"></div>\\r\\n<!-- Modal DELETE Label -->\\r\\n<ng-template #content let-modal>\\r\\n  <div class=\\\"modal-header\\\"  data-backdrop=\\\"static\\\">\\r\\n    <h4 i18n class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Conferma eliminazione</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p i18n>Sicuro di voler eliminare l'etichetta <strong>{{ label_name }}</strong>?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button i18n class=\\\"btn btn-danger\\\" (click)=\\\"deleteLabel()\\\" type=\\\"button\\\">Elimina</button>\\r\\n    <button i18n type=\\\"button\\\" class=\\\"btn btn-outline-default\\\" (click)=\\\"modal.close()\\\">Anulla</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<!-- Modal POST Label - Manual -->\\r\\n<ng-template #addManual let-modal>\\r\\n  <div class=\\\"modal-header\\\"  data-backdrop=\\\"static\\\">\\r\\n    <h4 i18n class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Richiesta registrazione etichette manuale</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label i18n>Inserisci gli ID delle etichette separate da spazi o virgole.</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='stringaID' name='stringaID' [value]='stringaID' id=\\\"stringaID\\\" placeholder=\\\"labelID0, labelID1, ...\\\">\\r\\n        <div *ngIf=\\\"valid_label_id\\\">\\r\\n          <small i18n>Inserisci almeno un ID!</small>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button i18n class=\\\"btn btn-primary\\\" (click)=\\\"postManual(stringaID)\\\" type=\\\"submit\\\">Registra</button>\\r\\n      <button i18n type=\\\"button\\\" class=\\\"btn btn-outline-default\\\" (click)=\\\"modal.close()\\\">Anulla</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\\r\\n<!-- Modal POST Label - File  (WiP) -->\\r\\n<ng-template #addFile let-modal>\\r\\n  <div class=\\\"modal-header\\\" data-backdrop=\\\"static\\\">\\r\\n    <h4 i18n class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Richiesta registrazione etichette con file</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label i18n>Scegli il file da caricare:</label>\\r\\n        <div class=\\\"file-field md-form\\\">\\r\\n          <div mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" class=\\\"waves-light\\\" mdbWavesEffect>\\r\\n            <input type=\\\"file\\\" mdbFileSelect (uploadOutput)=\\\"onUploadOutput($event)\\\" [(ngModel)]='filePath' name='filePath' id=\\\"filePath\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button i18n class=\\\"btn btn-primary\\\" (click)=\\\"postFile(stringaID)\\\" type=\\\"submit\\\" [disabled]=\\\"true\\\">Carica</button>\\r\\n      <button i18n type=\\\"button\\\" class=\\\"btn btn-outline-default\\\" (click)=\\\"modal.close()\\\">Anulla</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\\r\\n<!-- Contenuto della pagina -->\\r\\n<div class=\\\"container-fluid mt--7\\\">\\r\\n  <!-- Alerts -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <!-- Alert Conferma Eliminazione -->\\r\\n      <ngb-alert *ngIf=\\\"successMessage\\\" type=\\\"danger\\\" (close)=\\\"successMessage = ''\\\">{{ successMessage }}</ngb-alert>\\r\\n      <!-- Alert Conferma Aggiunta -->\\r\\n      <ngb-alert *ngIf=\\\"successMessageAdd\\\" type=\\\"success\\\" (close)=\\\"successMessageAdd = ''\\\">{{ successMessageAdd }}</ngb-alert>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <!-- Titolo -->\\r\\n            <div class=\\\"col\\\">\\r\\n              <h2 i18n class=\\\"mb-0\\\">Lista Etichette</h2>\\r\\n            </div>\\r\\n            <!-- Preview Etichetta Attiva -->\\r\\n            <div class=\\\"col text-center\\\">\\r\\n              <div *ngIf=\\\"showPrev\\\">\\r\\n                <i class='fa fa-2x fa-picture-o'></i> <img style='max-width: 100%;max-height: 80%;' src='data:image/png;base64,{{ prev }}'/>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- Registra Etichetta -->\\r\\n            <div class=\\\"col text-right\\\">\\r\\n              <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n                <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\r\\n                <i i18n class=\\\"fas fa-caret-down\\\"></i> Registra Etichetta\\r\\n                </button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n                  <button i18n ngbDropdownItem (click)=\\\"openManual(addManual)\\\">Manualmente</button>\\r\\n                  <button i18n ngbDropdownItem (click)=\\\"openManual(addFile)\\\" disabled=\\\"true\\\">Da file</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Contenuto -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- Tabella Etichette -->\\r\\n          <div class=\\\"table-responsive\\\" id=\\\"stampare\\\">\\r\\n            <table class=\\\"display table table-striped align-items-center table-flush\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th i18n scope=\\\"col\\\">ID Etichetta</th>\\r\\n                <th i18n scope=\\\"col\\\">Tipo</th>\\r\\n                <th i18n scope=\\\"col\\\">Power Status</th>\\r\\n                <th i18n scope=\\\"col\\\">Connection Status</th>\\r\\n                <th i18n scope=\\\"col\\\">Data Revisione</th>\\r\\n                <th i18n scope=\\\"col\\\">ID Access Point</th>\\r\\n                <th></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let label of labels$\\\">\\r\\n                <th>\\r\\n                  <a [routerLink]=\\\"view-label\\\" (click)=\\\"viewLabel(label.LabelId)\\\">\\r\\n                  {{ label.LabelId }}\\r\\n                  </a>\\r\\n                </th>\\r\\n                <td>{{ label.Type }}</td>\\r\\n                <td *ngIf=\\\" label.PowerStatus > 20; else elseBlock\\\">\\r\\n                  <div class=\\\"progress\\\" style=\\\"height: 30px;\\\">\\r\\n                    <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: {{ 1 * label.PowerStatus }}%;\\\">{{ label.PowerStatus }}%</div>\\r\\n                  </div>\\r\\n                </td>\\r\\n                <ng-template #elseBlock>\\r\\n                  <td>\\r\\n                    <div class=\\\"progress\\\" style=\\\"height: 30px;\\\">\\r\\n                      <div class=\\\"progress-bar bg-danger\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: {{ 1 * label.PowerStatus }}%;\\\">{{ label.PowerStatus }}%</div>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n                <td>\\r\\n                  <i class=\\\"fas fa-power-off\\\"></i>\\r\\n                  <strong> {{ label.ConnectionStatus }}</strong>\\r\\n                </td>\\r\\n                <td>{{ label.UpdatedAt }}</td>\\r\\n                <td>{{ label.AccessPointId }}</td>\\r\\n                <td>\\r\\n                  <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Tools\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"openPreview(label.LabelId)\\\">\\r\\n                    <i class=\\\"fas fa-eye\\\"></i>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"putDeactivateMatch(label.LabelId)\\\">\\r\\n                    <i class=\\\"fas fa-unlink\\\"></i>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"open(content, label.LabelId)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            </table>   \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"header bg-gradient-info pb-8 pt-5 pt-md-5\\\"></div>\\r\\n<!-- Modal DELETE Location -->\\r\\n<ng-template #content let-modal>\\r\\n  <div class=\\\"modal-header\\\"  data-backdrop=\\\"static\\\">\\r\\n    <h4 i18n class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Conferma eliminazione</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p i18n>Sicuro di voler eliminare la Location <strong>{{ alias }}</strong>?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button i18n class=\\\"btn btn-danger\\\" (click)=\\\"deleteLocation()\\\" type=\\\"button\\\">Elimina</button>\\r\\n    <button i18n type=\\\"button\\\" class=\\\"btn btn-outline-default\\\" (click)=\\\"modal.close()\\\">Anulla</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<!-- Contenuto della pagina -->\\r\\n<div class=\\\"container-fluid mt--7\\\" id=\\\"stampare\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <!-- Alert Conferma Eliminazione -->\\r\\n      <ngb-alert *ngIf=\\\"deleteMessage\\\" type=\\\"danger\\\" (close)=\\\"deleteMessage = ''\\\">{{ deleteMessage }}</ngb-alert>\\r\\n      <!-- Alert Conferma Aggiunta -->\\r\\n      <ngb-alert *ngIf=\\\"successMessage\\\" type=\\\"success\\\" (close)=\\\"successMessage = ''\\\">{{ successMessage }}</ngb-alert>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- Corsie -->\\r\\n    <div class=\\\"col-xl-4\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Corsie</h6>\\r\\n              <h2 i18n class=\\\"mb-0\\\">Elenco delle corsie</h2>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Body -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- Aggiungi Corsia -->\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" #nomeCorsia name=\\\"nomeCorsia\\\" placeholder=\\\"Aggiungi corsia\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"button-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <button class=\\\"btn btn-inline-primary\\\" type=\\\"submit\\\" id=\\\"button-addon2\\\" (click)=\\\"postCorsia(nomeCorsia.value, '1')\\\" for='nomeCorsia'>\\r\\n              <i class=\\\"ni ni-fat-add\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Elenco Corsie -->\\r\\n          <table class=\\\"table align-items-center table-flush\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th i18n scope=\\\"col\\\">Nome</th>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let corsia of locations$\\\">\\r\\n                <ng-template [ngIf]=\\\"corsia.location_type.id == 1 && corsia.is_active\\\">\\r\\n                  <th>{{ corsia.name }}</th>\\r\\n                  <td align=\\\"right\\\">\\r\\n                    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Tools\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"open(content, corsia.id, corsia.name)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Posizioni -->\\r\\n    <div class=\\\"col-xl-4\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Posizione</h6>\\r\\n              <h2 i18n class=\\\"mb-0\\\">Elenco delle posizioni</h2>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Body -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- Aggiungi Posizione -->\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" #nomePosizione name=\\\"nomePosizione\\\" placeholder=\\\"Aggiungi posizione\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"button-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <button class=\\\"btn btn-inline-primary\\\" type=\\\"submit\\\" id=\\\"button-addon2\\\" (click)=\\\"postCorsia(nomePosizione.value, '2')\\\" for='nomePosizione'>\\r\\n              <i class=\\\"ni ni-fat-add\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Elenco Posizioni -->\\r\\n          <table class=\\\"table align-items-center table-flush\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th i18n scope=\\\"col\\\">Nome</th>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let corsia of locations$\\\">\\r\\n                <ng-template [ngIf]=\\\"corsia.location_type.id == 2 && corsia.is_active\\\">\\r\\n                  <th>{{ corsia.name }}</th>\\r\\n                  <td align=\\\"right\\\">\\r\\n                    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Tools\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"open(content, corsia.id, corsia.name)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Ripiani -->\\r\\n    <div class=\\\"col-xl-4\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <h6 i18n class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Ripiano</h6>\\r\\n              <h2 i18n class=\\\"mb-0\\\">Elenco dei ripiani</h2>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Body -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- Aggiungi Ripiano -->\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" #nomeRipiano name=\\\"nomeRipiano\\\" placeholder=\\\"Aggiungi ripiano\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"button-addon2\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <button class=\\\"btn btn-inline-primary\\\" type=\\\"submit\\\" id=\\\"button-addon2\\\" (click)=\\\"postCorsia(nomeRipiano.value, '3')\\\" for='nomeRipiano'>\\r\\n              <i class=\\\"ni ni-fat-add\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Elenco Ripiani -->\\r\\n          <table class=\\\"table align-items-center table-flush\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th i18n scope=\\\"col\\\">Nome</th>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let corsia of locations$\\\">\\r\\n                <ng-template [ngIf]=\\\"corsia.location_type.id == 3 && corsia.is_active\\\">\\r\\n                  <th>{{ corsia.name }}</th>\\r\\n                  <td align=\\\"right\\\">\\r\\n                    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Tools\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"open(content, corsia.id, corsia.name)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </ng-template>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"header bg-gradient-info pb-8 pt-5 pt-md-5\\\"></div>\\r\\n<!-- Modal DELETE Match -->\\r\\n<ng-template #content let-modal>\\r\\n  <div class=\\\"modal-header\\\"  data-backdrop=\\\"static\\\">\\r\\n    <h4 i18n class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Conferma eliminazione</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p i18n>Sicuro di voler eliminare lo SmartMatch selezionato?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button i18n class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem()\\\" type=\\\"button\\\">Elimina</button>\\r\\n    <button i18n type=\\\"button\\\" class=\\\"btn btn-outline-default\\\" (click)=\\\"modal.close()\\\">Anulla</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<!-- Contenuto della pagina -->\\r\\n<div class=\\\"container-fluid mt--7\\\">\\r\\n  <!-- Aggiungi Match -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <h2 i18n class=\\\"mb-0\\\">Aggiungi Match</h2>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- Form -->\\r\\n          <form>\\r\\n            <!-- Prima Riga -->\\r\\n            <div class=\\\"row\\\">\\r\\n              <!-- Tipo Articolo -->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label i18n for=\\\"itemType\\\">Tipo Articolo</label>\\r\\n                  <select [(ngModel)]=\\\"selectedOption\\\" #itemType class=\\\"form-control\\\" name=\\\"itemType\\\" id=\\\"itemType\\\" (click)=\\\"getItemTypeTemplate($event.target.value)\\\">\\r\\n                  <option *ngFor=\\\"let item of varItem\\\" [value]=\\\"item.id\\\">{{ item.name }}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Tipo Barcode -->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label i18n>Tipo Barcode</label>\\r\\n                  <select [(ngModel)]=\\\"selectedOption3\\\" class=\\\"form-control\\\" name=\\\"barcodeS\\\" id=\\\"barcode\\\" disable=\\\"false\\\">\\r\\n                  <option i18n #barcode>ITEM BARCODE</option>\\r\\n                  <option i18n #ean13>EAN 13</option>\\r\\n                  <option i18n #decimale>MINSAN decimale</option>\\r\\n                  <option i18n #alfa>MINSAN alfa</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- Seconda Riga -->\\r\\n            <div class=\\\"row\\\">\\r\\n              <!-- Item Barcode -->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label i18n>Item Barcode</label>\\r\\n                  <div [className]=\\\"itemValid == true ? 'form-group input-group' : 'form-group input-group'\\\">\\r\\n                    <input type=\\\"text\\\" [className]=\\\"itemValid == true ? 'form-control is-valid' : 'form-control is-invalid'\\\" #item_barcode id=\\\"item_barcode\\\" placeholder=\\\"item_barcode\\\" (change)=\\\"ngOnChangesItem(item_barcode.value, itemType.value)\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-outline-default\\\" type=\\\"button\\\" (click)=\\\"moreItem()\\\">+</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"itemValid\\\">\\r\\n                    <option i18n class=\\\"form-control\\\">ID: {{ testItem }}</option>\\r\\n                    <option i18n class=\\\"form-control\\\">Nome: {{ testItemName }}</option>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Label ID -->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label i18n>ID Etichetta</label>\\r\\n                  <div [className]=\\\"labelValid == true ? 'form-group has-success' : 'form-group'\\\">\\r\\n                    <input type=\\\"text\\\" [className]=\\\"labelValid == true ? 'form-control is-valid' : 'form-control is-invalid'\\\" #labelID id=\\\"labelID\\\" placeholder=\\\"id_etichetta\\\" (change)=\\\"ngOnChanges(labelID.value)\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- Terza Riga -->\\r\\n            <div class=\\\"row\\\">\\r\\n              <!-- Template -->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label i18n for=\\\"template\\\">Template</label>\\r\\n                  <select class=\\\"form-control\\\" #template name=\\\"template\\\" id=\\\"template\\\">\\r\\n                  <option *ngFor=\\\"let template of templates\\\" [value]=\\\"template.title\\\">{{ template.title }}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Decorators -->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Decorators</label>\\r\\n                  <select [(ngModel)]=\\\"selectedDecoration\\\" class=\\\"form-control\\\" #decorator name=\\\"decorator\\\" id=\\\"decorator\\\">\\r\\n                  <option [value]=\\\"0\\\"> </option>\\r\\n                  <option i18n [value]=\\\"1\\\">Ruota di 90 gradi</option>\\r\\n                  <option i18n [value]=\\\"2\\\">Ruota di 180 gradi</option>\\r\\n                  <option i18n [value]=\\\"3\\\">Ruota di 270 gradi</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- Quarta riga Riga -->\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-auto\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label i18n>Altre opzioni:</label>\\r\\n                  <div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n                    <input class=\\\"custom-control-input\\\" #checkActive id=\\\"checkActive\\\" type=\\\"checkbox\\\" name=\\\"checkActive\\\" [(ngModel)]=\\\"checkActiveC\\\" data-md-icheck>\\r\\n                    <label i18n class=\\\"custom-control-label\\\" for=\\\"checkActive\\\">Is Active</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n                    <input class=\\\"custom-control-input\\\" #checkPromo id=\\\"checkPromo\\\" type=\\\"checkbox\\\" name=\\\"checkPromo\\\" [(ngModel)]=\\\"checkPromoC\\\" data-md-icheck>\\r\\n                    <label i18n class=\\\"custom-control-label\\\" for=\\\"checkPromo\\\">Promo</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col text-right\\\">\\r\\n                <br><br><br>\\r\\n                <button i18n type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addSm(template.value, labelID.value, decorator.value)\\\">Aggiungi</button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <!-- +More Items+ -->\\r\\n            <div *ngFor=\\\"let in of counter(nrItems); let i = index\\\">\\r\\n              <label i18n>Item Barcode</label>\\r\\n              <div [className]=\\\"itemArray[i] != null ? 'form-group input-group' : 'form-group input-group'\\\">\\r\\n                <input type=\\\"text\\\" [className]=\\\"itemArray[i] != null ? 'form-control is-valid' : 'form-control is-invalid'\\\" #item_barcode_{{i}} id=\\\"item_barcode_{{ i }}\\\" placeholder=\\\"item_barcode\\\" (change)=\\\"ngOnChangesMoreItem(itemType.value, i)\\\">\\r\\n              </div>\\r\\n              <div *ngIf=\\\"itemArray[i] != null\\\">\\r\\n                <!-- ngIf* -- > return != null -->\\r\\n                <option i18n class=\\\"form-control\\\">ID: {{ itemArray[i] }}</option>\\r\\n                <!-- <option i18n class=\\\"form-control\\\">Nome: {{ testItemName }}</option> -->\\r\\n              </div>\\r\\n              <br>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <!-- Alerts -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <!-- Alert Conferma Eliminazione -->\\r\\n      <ngb-alert *ngIf=\\\"successMessage\\\" type=\\\"danger\\\" (close)=\\\"successMessage = ''\\\">{{ successMessage }}</ngb-alert>\\r\\n      <!-- Alert Conferma Aggiunta -->\\r\\n      <ngb-alert *ngIf=\\\"successMessageAdd\\\" type=\\\"success\\\" (close)=\\\"successMessageAdd = ''\\\">{{ successMessageAdd }}</ngb-alert>\\r\\n      <!-- Alert Aggiunta Fallita -->\\r\\n      <ngb-alert *ngIf=\\\"failedMessageAdd\\\" type=\\\"danger\\\" (close)=\\\"failedMessageAdd = ''\\\">{{ failedMessageAdd }}</ngb-alert>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <!-- Tabella Match -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <h2 i18n class=\\\"mb-0\\\">Matches Online</h2>\\r\\n            </div>\\r\\n            <div class=\\\"col text-right\\\">\\r\\n              <div *ngIf=\\\"showPrev\\\">\\r\\n                <i class='fa fa-2x fa-picture-o'></i> <img style='max-width: 100%;max-height: 80%;' src='data:image/png;base64,{{ prev }}'/>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Contenuto -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- Tabella Smartmatches -->\\r\\n          <div class=\\\"table-responsive\\\" id=\\\"stampare\\\">\\r\\n            <table class=\\\"display table align-items-center table-flush\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th i18n scope=\\\"col\\\">Template Name</th>\\r\\n                <th i18n scope=\\\"col\\\">Label ID</th>\\r\\n                <th i18n scope=\\\"col\\\">Items</th>\\r\\n                <th i18n scope=\\\"col\\\">Is Active</th>\\r\\n                <th i18n scope=\\\"col\\\">Bypass Promo</th>\\r\\n                <th i18n scope=\\\"col\\\"></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let match of matchs$\\\">\\r\\n                <td *ngIf=\\\"match.is_active == true\\\">{{ match.template_name }}</td>\\r\\n                <td *ngIf=\\\"match.is_active == true\\\">{{ match.label_id }}</td>\\r\\n                <td *ngIf=\\\"match.is_active == true\\\">{{ match.items }}</td>\\r\\n                <td *ngIf=\\\"match.is_active == true\\\">\\r\\n                  <span i18n class=\\\"badge badge-success\\\">SI</span>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"match.is_active == true\\\">\\r\\n                  <div *ngIf=\\\"match.bypass_promo == true; else elseBlock\\\"><span i18n class=\\\"badge badge-success\\\">SI</span></div>\\r\\n                  <ng-template #elseBlock><span i18n class=\\\"badge badge-danger\\\">NO</span></ng-template>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"match.is_active == true\\\">\\r\\n                  <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Tools\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"openPreview(match.id)\\\">\\r\\n                    <i class=\\\"fas fa-eye\\\"></i>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"open(content, match.id, match.id)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            </table>                        \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"header bg-gradient-info pb-8 pt-5 pt-md-5\\\"></div>\\r\\n<!-- Contenuto della pagina -->\\r\\n<div class=\\\"container-fluid mt--7\\\" id=\\\"stampare\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <h2 i18n class=\\\"mb-0\\\">Dettagli Articolo {{ nomeArticolo }}</h2>\\r\\n        </div>\\r\\n        <!-- Contenuto -->\\r\\n        <form (ngSubmit)=\\\"updateItem()\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div *ngFor=\\\"let par of parametri$\\\" class=\\\"form-group\\\">\\r\\n              <label for=\\\"{{ valori$[par] }}\\\">\\r\\n              {{ par }}\\r\\n              </label>\\r\\n              <br>\\r\\n              <input class=\\\"form-control form-control-alternative\\\" #{{par}} id=\\\"{{ par }}\\\" type=\\\"text\\\" value=\\\"{{ valori$[par] }}\\\">\\r\\n            </div>\\r\\n            <button i18n type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">Salva</button>\\r\\n          </div>\\r\\n        </form>\\r\\n        <!--\\r\\n          paramtri$[index] - -> valori$[index]\\r\\n          NomeCampo - -> valore attuale (ovvero modificato)\\r\\n          -->\\r\\n        <!-- Header -->\\r\\n        <div class=\\\"card-header bg-transparent\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <h3 i18n class=\\\"mb-0\\\">Matches Associati</h3>\\r\\n            </div>\\r\\n            <!-- Preview Etichetta Attiva -->\\r\\n            <div class=\\\"col text-right\\\">\\r\\n              <div *ngIf=\\\"showPrev\\\">\\r\\n                <i class='fa fa-2x fa-picture-o'></i> <img style='max-width: 100%; max-height: 80%;' src='data:image/png;base64,{{ prev }}'/>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Contenuto: Matchs -->\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n          <table class=\\\"display table align-items-center table-flush\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th i18n>Template Name</th>\\r\\n                <th i18n>Label ID</th>\\r\\n                <th i18n>Items</th>\\r\\n                <th i18n>Is Active</th>\\r\\n                <th i18n>Bypass Promo</th>\\r\\n                <th i18n>Match e Immagini</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let match of matchs$\\\">\\r\\n                <td>{{ match.template_name }}</td>\\r\\n                <td>{{ match.label_id }}</td>\\r\\n                <td>{{ match.items }}</td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"match.is_active == true; else elseBlockActive\\\"><span class=\\\"badge badge-success\\\">SI</span></div>\\r\\n                  <ng-template #elseBlockActive>\\r\\n                    <span i18n class=\\\"badge badge-danger\\\">NO</span>&nbsp;\\r\\n                    <button i18n class=\\\"btn btn-success btn-sm\\\" (click)=\\\"activateLabel(match.id)\\\" [disabled]=\\\"true\\\">\\r\\n                    Attiva\\r\\n                    </button>\\r\\n                  </ng-template>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div i18n *ngIf=\\\"match.bypass_promo == true; else elseBlock\\\"><span class=\\\"badge badge-success\\\">SI</span></div>\\r\\n                  <ng-template #elseBlock><span i18n class=\\\"badge badge-danger\\\">NO</span></ng-template>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Tools\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"openPreview(match.id)\\\">\\r\\n                    <i class=\\\"fas fa-eye\\\"></i>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"open()\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <br><br>\\r\\n          <!-- Bottoni -->\\r\\n          <button i18n type=\\\"button\\\" class=\\\"btn btn-secondary btn-lg btn-block\\\" (click)=\\\"goBack()\\\">Annulla</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\n\r\nimport { AdminLayoutRoutes } from './admin-layout.routing';\r\nimport { DashboardComponent } from '../../pages/dashboard/dashboard.component';\r\nimport { SmartmatchComponent } from '../../pages/smartmatch/smartmatch.component';\r\nimport { ArticoliComponent } from '../../pages/articoli/articoli.component';\r\nimport { EtichetteComponent } from '../../pages/etichette/etichette.component';\r\nimport { LocationComponent } from '../../pages/location/location.component';\r\n\r\nimport { VisualizzarticoloComponent } from '../../pages/visualizzarticolo/visualizzarticolo.component';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n// import { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AdminLayoutRoutes),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    ClipboardModule,\r\n    DataTablesModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    EtichetteComponent,\r\n    LocationComponent,\r\n    SmartmatchComponent,\r\n    ArticoliComponent,\r\n    VisualizzarticoloComponent\r\n  ]\r\n})\r\n\r\nexport class AdminLayoutModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from '../../pages/dashboard/dashboard.component';\r\nimport { SmartmatchComponent } from '../../pages/smartmatch/smartmatch.component';\r\nimport { ArticoliComponent } from '../../pages/articoli/articoli.component';\r\nimport { EtichetteComponent } from '../../pages/etichette/etichette.component';\r\nimport { LocationComponent } from '../../pages/location/location.component';\r\nimport { VisualizzarticoloComponent } from '../../pages/visualizzarticolo/visualizzarticolo.component';\r\nimport { ViewlabelComponent } from '../../pages/viewlabel/viewlabel.component'\r\nimport { CrearticoloComponent } from '../../pages/crearticolo/crearticolo.component';\r\n\r\nexport const AdminLayoutRoutes: Routes = [\r\n    { path: 'dashboard',      component: DashboardComponent },\r\n    { path: 'etichette',      component: EtichetteComponent },\r\n    { path: 'location',       component: LocationComponent },\r\n    { path: 'smartmatch',     component: SmartmatchComponent },\r\n    { path: 'articoli',       component: ArticoliComponent },\r\n    { path: 'view-item',      component: VisualizzarticoloComponent  },\r\n    { path: 'view-label',     component: ViewlabelComponent },\r\n    { path: 'crea-item',      component: CrearticoloComponent }\r\n];\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FydGljb2xpL2FydGljb2xpLmNvbXBvbmVudC5zY3NzIn0= */\"","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tOnDestroy,\r\n\tViewChild,\r\n\tViewChildren,\r\n\tQueryList,\r\n\tElementRef,\r\n  } from '@angular/core';\r\n  import {\r\n\tHttpClient,\r\n\tHttpHeaders\r\n  } from '@angular/common/http';\r\n  import {\r\n\tSubject\r\n  } from 'rxjs';\r\n  import {\r\n\tNgbModal,\r\n\tNgbModalConfig\r\n  } from '@ng-bootstrap/ng-bootstrap';\r\n  import {\r\n\tDataTableDirective\r\n  } from 'angular-datatables';\r\n  import {\r\n\tdebounceTime\r\n  } from 'rxjs/operators';\r\n  import {\r\n\tRouter\r\n  } from '@angular/router';\r\n  import {\r\n\tenvironment\r\n  } from './../../../environments/environment';\r\n  \r\n  var del_item_id: String;\r\n  \r\n  // Componente principale\r\n  @Component({\r\n\tselector: 'app-articoli',\r\n\ttemplateUrl: './articoli.component.html',\r\n\tstyleUrls: ['./articoli.component.scss']\r\n  })\r\n  \r\n  export class ArticoliComponent implements OnInit, OnDestroy {\r\n  \r\n\t// Var DataTables\r\n\t@ViewChild(DataTableDirective, {\r\n\t  static: false\r\n\t})\r\n\tdtElement: DataTableDirective;\r\n\titems$: any[] = [];\r\n\tdtOptions: any = {};\r\n\tdtTrigger: Subject < any > = new Subject();\r\n  \r\n\t// Variabili ItemType\r\n\titems_t;\r\n\ttitems_t: number;\r\n  \r\n\t// Alert e Modal - Delete\r\n\tprivate _success = new Subject < string > ();\r\n\tstaticAlertClosed = false;\r\n\talias: String;\r\n\tproviders: [NgbModalConfig, NgbModal]\r\n\tsuccessMessage = '';\r\n  \r\n\t// Multiple Delete\r\n\tindex = 0;\r\n\tindexDel = 0;\r\n\tdelItems$: any[] = [];\r\n\ttoZero: boolean = true;\r\n  \r\n  \r\n\tconstructor(private httpClient: HttpClient, private modalService: NgbModal, config: NgbModalConfig, private router: Router) {\r\n\t  config.backdrop = 'static';\r\n\t  config.keyboard = false;\r\n\t}\r\n  \r\n\t// Init\r\n\tngOnInit(): void {\r\n\t  // Controllo l'accesso\r\n\t  if (localStorage.getItem('apikey') != null) {\r\n\t\t// DataTables Options\r\n\t\tthis.dtOptions = {\r\n\t\t  pagingType: 'full_numbers',\r\n\t\t  pageLength: 10,\r\n\t\t  processing: true,\r\n\t\t  order: [],\r\n\t\t  select: {\r\n\t\t\tstyle: 'multi'\r\n\t\t  },\r\n\t\t  retrieve: true,\r\n\t\t  // dom: 'lfti',\r\n\t\t};\r\n\t\t// Tabella Articoli\r\n\t\tthis.getItems();\r\n\t\t// Crea Nuovo Articolo\r\n\t\tthis.getItemType();\r\n\t  } else {\r\n\t\tthis.router.navigate(['../login']);\r\n\t  }\r\n\t}\r\n  \r\n\t// Destory\r\n\tngOnDestroy(): void {\r\n\t  this.dtTrigger.unsubscribe();\r\n\t}\r\n  \r\n\t// API Articoli\r\n\tgetItems() {\r\n\t  let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n\t  this.httpClient.get(environment.URL_ROOT + '/item/concrete?recordsPerPage=999999999999', {\r\n\t\t  headers\r\n\t\t})\r\n\t\t.toPromise().then((data: any) => {\r\n\t\t  this.items$ = data.items;\r\n\t\t  this.dtTrigger.next();\r\n\t\t}, error => {\r\n\t\t  console.log(error);\r\n\t\t});\r\n\t}\r\n  \r\n  \r\n\t// --------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Funzione viewItem\r\n\tviewItem(item_id: string) {\r\n\t  localStorage.removeItem('item_id');\r\n\t  localStorage.setItem('item_id', item_id);\r\n\t  this.router.navigateByUrl('/view-item');\r\n\t}\r\n  \r\n\t// New Item\r\n\taddItem(id) {\r\n\t  localStorage.removeItem('new_item_id');\r\n\t  localStorage.setItem('new_item_id', id);\r\n\t  this.router.navigateByUrl('/crea-item');\r\n\t}\r\n  \r\n  \r\n\t// --------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Funzione Crea Nuovo Articolo\r\n\tgetItemType() {\r\n\t  let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n\t  this.httpClient.get(environment.URL_ROOT + '/item/type', {\r\n\t\t  headers\r\n\t\t})\r\n\t\t.toPromise().then((itemtAPI: any) => {\r\n\t\t  this.titems_t = itemtAPI.total_itemtype;\r\n\t\t  this.items_t = itemtAPI.itemtype;\r\n\t\t}, error => {\r\n\t\t  console.log(error);\r\n\t\t});\r\n\t}\r\n  \r\n  \r\n\t// --------------------------------------------------------------------------------------------------------------------------------------------\r\n\t// Funzione Elimina Articolo - OpenModal\r\n\topen(content, d_item_id: String, d_item_a: String) {\r\n\t  // Passo le info dell'item da eliminare\r\n\t  del_item_id = d_item_id;\r\n\t  this.alias = d_item_a;\r\n\t  // Mostro il Modal per la conferma\r\n\t  this.modalService.open(content, {\r\n\t\tariaLabelledBy: 'modal-basic-title'\r\n\t  })\r\n\t}\r\n  \r\n\topenMultiple(multiple) {\r\n\t  // Mostro il Modal per la conferma\r\n\t  this.modalService.open(multiple, {\r\n\t\tariaLabelledBy: 'modal-basic-title'\r\n\t  })\r\n\t}\r\n  \r\n\t// API DELETE Item\r\n\tdeleteItem(): void {\r\n\t  let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n\t  headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n\t  this.httpClient.delete(environment.URL_ROOT + '/item/concrete/' + del_item_id, {\r\n\t\theaders\r\n\t  }).subscribe(data => {\r\n\t\tthis.getItems();\r\n\t\tthis.modalService.dismissAll();\r\n\t\tthis.showAlert();\r\n\t  }, error => {\r\n\t\tconsole.log(error);\r\n\t  });\r\n\t}\r\n  \r\n\t// Multiple DELETE ------\r\n\t@ViewChildren(\"checkboxes\") checkboxes: QueryList < ElementRef > ;\r\n\tdeleteMultiple() {\r\n\t  this.toZero = true;\r\n\t  this.checkboxes.forEach((element) => {\r\n\t\tif (element.nativeElement.checked == true) {\r\n\t\t  this.delItems$[this.indexDel] = element.nativeElement.id;\r\n\t\t  this.indexDel++;\r\n\t\t}\r\n\t  });\r\n  \r\n\t  let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n\t  headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n\t  let i;\r\n  \r\n\t  this.delItems$.forEach(element => {\r\n\t\tthis.httpClient.delete(environment.URL_ROOT + '/item/concrete/' + element, {\r\n\t\t  headers\r\n\t\t}).subscribe(data => {\r\n\t\t  // Index elemento da eliminare\r\n\t\t  let i: number;\r\n\t\t  i = this.delItems$.indexOf(element);\r\n  \r\n\t\t  // Parte Grafica\r\n\t\t  this.getItems();\r\n\t\t  this.modalService.dismissAll();\r\n\t\t  this.showAlert();\r\n\t\t  // Rimuovere item dall'array\r\n\t\t  this.delItems$.splice(i, 1);\r\n\t\t  this.index--;\r\n\t\t}, error => {\r\n\t\t  console.log(error);\r\n\t\t});\r\n  \r\n\t  });\r\n\t}\r\n  \r\n\t// Aggiungi tutti gli ITEM alla lista\r\n\tcheckAll() {\r\n\t  this.checkboxes.forEach((element) => {\r\n\t\telement.nativeElement.checked = true;\r\n\t\tthis.getIndex()\r\n\t  });\r\n\t}\r\n  \r\n\t// Singolo Chechbox control\r\n\tngOnSelected() {\r\n\t  this.getIndex();\r\n\t}\r\n  \r\n\t// Conteggio Articoli Selezionati\r\n\tgetIndex() {\r\n\t  this.index = 0;\r\n\t  this.checkboxes.forEach((element) => {\r\n\t\tif (element.nativeElement.checked == true) {\r\n\t\t  this.index++;\r\n\t\t}\r\n\t  });\r\n\t}\r\n  \r\n\t// DELETE - Alert e Modal\r\n\t// Alert di Conferma\r\n\tpublic showAlert() {\r\n\t  this._success.subscribe(message => this.successMessage = message);\r\n\t  this._success.pipe(\r\n\t\tdebounceTime(5000)\r\n\t  ).subscribe(() => this.successMessage = '');\r\n\t  this._success.next('Articolo ' + this.alias + ' rimosso con successo!');\r\n\t}\r\n  \r\n\t// Rerender Tabella\r\n\trerender(): void {\r\n\t  this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n\t\tdtInstance.destroy();\r\n\t\t// this.getItems();\r\n\t\t// this.dtTrigger.next();\r\n\t  });\r\n\t}\r\n  \r\n  }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  System\r\n} from '../../variables/system';\r\nimport {\r\n  environment\r\n} from './../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\n\r\nexport class DashboardComponent implements OnInit {\r\n  // VAR ------------------------------------------------\r\n  // Var Installazione\r\n  varInstallation;\r\n  varInstallationType;\r\n  varInstName;\r\n  importBasePath;\r\n  // Var Display&Etichette\r\n  labelOnline;\r\n  labelOffline;\r\n  batteryGood;\r\n  batteryBad;\r\n  varTotMatch;\r\n  // Var APs\r\n  ap$;\r\n  totalAP;\r\n  // Var Articoli\r\n  varItem: any[] = [];\r\n  totalItemType;\r\n  varTotItem;\r\n  // Var Importazioni\r\n  varImport;\r\n  // Var Mobile Device\r\n  varMobile;\r\n  // Variabili System\r\n  system_info = new System('', '', '', '', '', '', '', '', '', '', '');\r\n  // Var Templates via ItemType.ID\r\n  templates;\r\n  selectedOption;\r\n\r\n\r\n  // COSTRUTTORE -----------------------------------------------------------\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    // Controllo l'accesso\r\n    if (localStorage.getItem('apikey') != null) {\r\n      // Richiamo le funzioni per API\r\n      this.getInstallation();\r\n\r\n      this.getDisplay();\r\n      this.getTotalMatch();\r\n      this.getAps();\r\n\r\n      this.getItems();\r\n      this.getTotItem();\r\n      this.getImport();\r\n\r\n      this.getMobile();\r\n\r\n      this.getInfo();\r\n    } else {\r\n      this.router.navigate(['../login']);\r\n    }\r\n  }\r\n\r\n  // -------- API Requests -------------------------------------------------------------------------------------------------------------------------------------\r\n  // Informazioni Installazione\r\n  getInstallation() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/system/configuration', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        let temp = data.configurations;\r\n        this.varInstallation = temp;\r\n        this.varInstName = temp.installation_name;\r\n        this.varInstallationType = temp.installation_type;\r\n        this.importBasePath = temp.import_base_path;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // Templates\r\n  getItemTypeTemplate(tid: string) {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/template/itemtype/' + tid, {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.templates = data.templates;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // +++++++++++++++++++++\r\n  // Display & Etichette\r\n  getDisplay() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/labelinfo/statistics', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        let temp = data;\r\n        this.labelOnline = temp.connection.online;\r\n        this.labelOffline = temp.connection.offline;\r\n        this.batteryGood = temp.battery.good;\r\n        this.batteryBad = temp.battery.bad;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // Total Matches\r\n  getTotalMatch() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/matching', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.varTotMatch = data.total_matching;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // Access Point\r\n  getAps() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/accesspoint', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        let temp = data;\r\n        this.totalAP = temp.total_access_point;\r\n        this.ap$ = temp.access_point;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // +++++++++++++++++++++\r\n  // Articoli\r\n  getItems() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/item/type', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.varItem = data.itemtype;\r\n        this.totalItemType = data.total_itemtype;\r\n        // console.log(this.varItem[0].id);\r\n        this.selectedOption = this.varItem[0].id;\r\n        this.getItemTypeTemplate(this.selectedOption);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // Totale Articoli\r\n  getTotItem() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/item/concrete', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        let temp = data.total_items;\r\n        this.varTotItem = temp;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // Importazioni\r\n  getImport() {\r\n    this.httpClient.get(environment.URL_ROOT + '/import/queue')\r\n      .toPromise().then((data: any) => {\r\n        let temp = data;\r\n        this.varImport = temp.importqueue;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // +++++++++++++++++++++\r\n  // Mobile Device\r\n  getMobile() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/mobiledevice', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        let temp = data.mobile_device;\r\n        this.varMobile = temp;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // +++++++++++++++++++++\r\n  // Info Sistema\r\n  getInfo() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/system', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.system_info = data;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V0aWNoZXR0ZS9ldGljaGV0dGUuY29tcG9uZW50LnNjc3MifQ== */\"","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpParams,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport {\r\n  Subject\r\n} from 'rxjs';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  NgbModal,\r\n  NgbModalConfig\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  DataTableDirective\r\n} from 'angular-datatables';\r\nimport {\r\n  environment\r\n} from './../../../environments/environment';\r\nimport {\r\n  debounceTime\r\n} from 'rxjs/operators';\r\n\r\n\r\nvar del_label_id: String;\r\n\r\n\r\n// Componente principale\r\n@Component({\r\n  selector: 'app-etichette',\r\n  templateUrl: './etichette.component.html',\r\n  styleUrls: ['./etichette.component.scss']\r\n})\r\n\r\nexport class EtichetteComponent implements OnInit, OnDestroy {\r\n  // Label VAR\r\n  batteria: number;\r\n  // DT var\r\n  @ViewChild(DataTableDirective, {\r\n    static: false\r\n  })\r\n  dtElement: DataTableDirective;\r\n\r\n  labels$: any[] = [];\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject < any > = new Subject();\r\n\r\n  elNumber: string;\r\n\r\n  // Alert e Modal\r\n  private _success = new Subject < string > ();\r\n  private _successAdd = new Subject < string > ();\r\n  staticAlertClosed = false;\r\n  label_name: String;\r\n  providers: [NgbModalConfig, NgbModal]\r\n  successMessage = '';\r\n  successMessageAdd = '';\r\n\r\n  // Aggiungi Label\r\n  valid_label_id: boolean = false;\r\n\r\n  // Preview\r\n  prevA;\r\n  prev: string = '';\r\n  showPrev: boolean = false;\r\n\r\n\r\n  constructor(private httpClient: HttpClient, private modalService: NgbModal, config: NgbModalConfig, private router: Router) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Controllo l'accesso\r\n    if (localStorage.getItem('apikey') != null) {\r\n      // GET Label\r\n      this.getLabel();\r\n      // DataTables Options\r\n      this.dtOptions = {\r\n        pagingType: 'full_numbers',\r\n        pageLength: 10,\r\n        processing: true,\r\n        dom: this.elNumber\r\n      };\r\n\r\n    } else {\r\n      this.router.navigate(['../login']);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n\r\n  // API GET Label\r\n  getLabel() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/labelinfo?recordsPerPage=999999999999', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.labels$ = data.label_info;\r\n        this.dtTrigger.next();\r\n      });\r\n\r\n    // Paginazione\r\n    if (this.labels$.length <= 10) {\r\n      this.elNumber = 'lfti';\r\n    } else {\r\n      this.elNumber = 'plfti';\r\n    }\r\n  }\r\n\r\n  // ----------------------------------------------------------------------------------------------------------------------------\r\n  // Funzione OpenModal\r\n  open(content, d_label_id: String) {\r\n    // Passo le info dell'item da eliminare\r\n    del_label_id = d_label_id;\r\n    this.label_name = d_label_id;\r\n    // Mostro il Modal per la conferma\r\n    this.modalService.open(content, {\r\n      ariaLabelledBy: 'modal-basic-title'\r\n    })\r\n  }\r\n\r\n  // API DELETE Label - Work In Proges ................................\r\n  deleteLabel(): void {\r\n    // Header apikey + Content-Type\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    // API - DELETE\r\n    this.httpClient.delete(environment.URL_ROOT + '/label/' + del_label_id, {\r\n      headers\r\n    }).subscribe();\r\n\r\n    // Chiuso il modal mostro l'alert, e renderizzo nuovamente la tabella\r\n    this.modalService.dismissAll();\r\n    this.showAlert();\r\n    this.rerender();\r\n\r\n  }\r\n\r\n  // Render Tabella\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Distruggo la vecchia tabella\r\n      dtInstance.destroy();\r\n      // Nuova chiamata agli API (il delay di 100ms serve per ottenere API aggiornati)\r\n      setTimeout(() => {\r\n        this.getLabel();\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n\r\n  // Alert \r\n  public showAlert() {\r\n    this._success.subscribe(message => this.successMessage = message);\r\n    this._success.pipe(\r\n      debounceTime(5000)\r\n    ).subscribe(() => this.successMessage = '');\r\n\r\n    this._success.next('Etichetta ' + this.label_name + ' rimossa con successo!');\r\n  }\r\n\r\n\r\n  // --------------------------------------------------------\r\n  // Aggiungi Etichette\r\n\r\n  // Modal Etichetta Manuale\r\n  openManual(addManual) {\r\n    this.modalService.open(addManual, {\r\n      ariaLabelledBy: 'modal-basic-title'\r\n    })\r\n  }\r\n\r\n  postManual(ids: string) {\r\n    if (ids == null || ids == '') {\r\n      this.valid_label_id = true;\r\n    } else {\r\n      let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n      let params = new HttpParams()\r\n        .set('label_id[]', ids)\r\n      this.httpClient.post(environment.URL_ROOT + '/label', params, {\r\n        headers\r\n      }).subscribe(data => {\r\n        this.modalService.dismissAll();\r\n        this.showAlertAdd();\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Modal Etichetta File\r\n  openFile(addFile) {\r\n    // Mostro il Modal per la conferma\r\n    this.modalService.open(addFile, {\r\n      ariaLabelledBy: 'modal-basic-title'\r\n    })\r\n  }\r\n  postFile(file: File) {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    console.log(file);\r\n    //let params = new HttpParams()\r\n    //.set('label_id[]', file)\r\n    //this.httpClient.post(environment.URL_ROOT + '/label/file', params ,{ headers }).subscribe();\r\n\r\n  }\r\n\r\n\r\n  // Preview -------------------------\r\n  openPreview(id) {\r\n    // Header generale\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n    // Richiesta preview\r\n    this.httpClient.get(environment.URL_ROOT + '/matching/preview/active/' + id, {\r\n      headers\r\n    }).subscribe(data => {\r\n      this.prevA = data;\r\n      this.prev = this.prevA.preview;\r\n      this.showPrev = true;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  // Alert Conferma ---------------------------------------------------\r\n  public showAlertAdd() {\r\n    this._successAdd.subscribe(message => this.successMessageAdd = message);\r\n    this._successAdd.pipe(\r\n      debounceTime(5000)\r\n    ).subscribe(() => this.successMessageAdd = '');\r\n\r\n    this._successAdd.next('Tutte le etichette sono state registrate correttamente. Tra qualche minuto saranno ONLINE.');\r\n  }\r\n\r\n\r\n  // View Details Label\r\n  viewLabel(labelId) {\r\n    localStorage.removeItem('label_id');\r\n    localStorage.setItem('label_id', labelId);\r\n    this.router.navigateByUrl('/view-label');\r\n  }\r\n\r\n\r\n  // API GET /api/matching/active/LGN20012 - trova l'id del match da scollegare\r\n  getIdActive(id) {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n\r\n    this.httpClient.get(environment.URL_ROOT + '/matching/active/' + id, {\r\n      headers\r\n    }).subscribe(data => {\r\n      this.prevA = data;\r\n      this.prev = this.prevA.preview;\r\n      this.showPrev = true;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  // API Scollega Label PUT /api/matching/{matchingId}/deactivate\r\n  putDeactivateMatch(id) {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    let matchId: string;\r\n    // Trovo ID del match\r\n    this.httpClient.get(environment.URL_ROOT + '/matching/active/' + id, {\r\n      headers\r\n    }).subscribe(data => {\r\n      let temp = data;\r\n      // matchId = temp.id;\r\n      console.log('ID: ' + matchId);\r\n      console.log(localStorage.getItem('apikey'));\r\n\r\n\r\n      headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n      // Elimino il match\r\n      let tempId = matchId;\r\n      this.httpClient.put(environment.URL_ROOT + '/matching/' + tempId + '/deactivate', {\r\n        headers\r\n      }).subscribe(data => {\r\n        console.log(data);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvY2F0aW9uL2xvY2F0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpParams,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport {\r\n  NgbModal,\r\n  ModalDismissReasons,\r\n  NgbModalConfig\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  Subject\r\n} from 'rxjs';\r\nimport {\r\n  debounceTime\r\n} from 'rxjs/operators';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  environment\r\n} from './../../../environments/environment';\r\n\r\nvar del_loc_id: String;\r\n\r\n\r\n@Component({\r\n  selector: 'app-location',\r\n  templateUrl: './location.component.html',\r\n  styleUrls: ['./location.component.scss']\r\n})\r\nexport class LocationComponent implements OnInit {\r\n  // Variabili Location\r\n  locations$;\r\n  // Alert e Modal\r\n  private _success = new Subject < string > ();\r\n  private _successAdd = new Subject < string > ();\r\n  staticAlertClosed = false;\r\n  alias: String;\r\n  aliasAdd: String;\r\n  providers: [NgbModalConfig, NgbModal]\r\n  deleteMessage = '';\r\n  successMessage = '';\r\n\r\n\r\n  constructor(private httpClient: HttpClient, private modalService: NgbModal, config: NgbModalConfig, private router: Router) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Controllo l'accesso\r\n    if (localStorage.getItem('apikey') != null) {\r\n      this.getLocations();\r\n    } else {\r\n      this.router.navigate(['../login']);\r\n    }\r\n  }\r\n\r\n\r\n  // Metodo GET - Visualizzare Locations -----------------------------------------------------------------\r\n  getLocations() {\r\n    // Header generale\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    // Elenco Corsie\r\n    this.httpClient.get(environment.URL_ROOT + '/location', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.locations$ = data.locations;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  // Metodo POST - Aggiungere Location ------------------------------------------------------------------\r\n  postCorsia(nomeLocation: string, tipoLocation: string) {\r\n    // Header generale\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    console.log(localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    // Parametri\r\n    let params = new HttpParams()\r\n      .set('locationTypeId', tipoLocation)\r\n      .set('locationName', nomeLocation)\r\n      .set('isActive', 'true');\r\n\r\n    // Aggiungo Location\r\n    this.httpClient.post(environment.URL_ROOT + '/location', params, {\r\n      headers\r\n    }).subscribe(data => {\r\n      this.aliasAdd = nomeLocation;\r\n      this.showAlertSuccess();\r\n      this.getLocations();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  // Alert di Conferma POST\r\n  public showAlertSuccess() {\r\n    this._successAdd.subscribe(message => this.successMessage = message);\r\n    this._successAdd.pipe(\r\n      debounceTime(5000)\r\n    ).subscribe(() => this.successMessage = '');\r\n    this._successAdd.next('Location ' + this.aliasAdd + ' aggiunta con successo!');\r\n  }\r\n\r\n\r\n  // Metodo DELETE - Rimovi Location ---------------------------------------------------------------------\r\n  deleteLocation(): void {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    this.httpClient.delete(environment.URL_ROOT + '/location/' + del_loc_id, {\r\n      headers\r\n    }).subscribe(data => {\r\n      this.modalService.dismissAll();\r\n      this.showAlert();\r\n      this.getLocations();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  // Funzione OpenModal - Conferma Eliminazione\r\n  open(content, d_item_id: String, d_item_a: String) {\r\n    del_loc_id = d_item_id;\r\n    this.alias = d_item_a;\r\n    this.modalService.open(content, {\r\n      ariaLabelledBy: 'modal-basic-title'\r\n    })\r\n  }\r\n\r\n  // Alert di Conferma DELETE\r\n  public showAlert() {\r\n    this._success.subscribe(message => this.deleteMessage = message);\r\n    this._success.pipe(\r\n      debounceTime(5000)\r\n    ).subscribe(() => this.deleteMessage = '');\r\n    this._success.next('Location ' + this.alias + ' rimossa con successo!');\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NtYXJ0bWF0Y2gvc21hcnRtYXRjaC5jb21wb25lbnQuc2NzcyJ9 */\"","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  Input,\r\n} from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpParams,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport {\r\n  Subject\r\n} from 'rxjs';\r\nimport {\r\n  environment\r\n} from './../../../environments/environment';\r\nimport {\r\n  NgbModal,\r\n  ModalDismissReasons,\r\n  NgbModalConfig\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  debounceTime\r\n} from 'rxjs/operators';\r\nimport {\r\n  DataTableDirective\r\n} from 'angular-datatables';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\n\r\nvar del_item_id: String;\r\n\r\n\r\n@Component({\r\n  selector: 'app-smartmatch',\r\n  templateUrl: './smartmatch.component.html',\r\n  styleUrls: ['./smartmatch.component.scss']\r\n})\r\nexport class SmartmatchComponent implements OnInit, OnDestroy {\r\n  // VAR TEST - Aggiungere un singolo item\r\n  testItem;\r\n  testItemName;\r\n  itemArray: any[] = [];\r\n\r\n  // VAR more items\r\n  nrItems: number = 0;\r\n\r\n  // Verifica form -- Etichette\r\n  @Input() labelID: string;\r\n\r\n  // var Item\r\n  varItem;\r\n  selectedOption;\r\n  // selectedOption2;\r\n  selectedOption3;\r\n  selectedDecoration;\r\n  // Var Templates via ItemType.ID\r\n  templates;\r\n\r\n  // DT \r\n  @ViewChild(DataTableDirective, {\r\n    static: false\r\n  })\r\n  dtElement: DataTableDirective;\r\n  matchs$: any[] = [];\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject < any > = new Subject();\r\n\r\n  // Alert e Modal\r\n  private _success = new Subject < string > ();\r\n  private _successAdd = new Subject < string > ();\r\n  // private _failed = new Subject < string > ();\r\n  private _failedAdd = new Subject < string > ();\r\n  staticAlertClosed = false;\r\n  alias: String;\r\n  providers: [NgbModalConfig, NgbModal]\r\n  successMessage = '';\r\n  successMessageAdd = '';\r\n  failedMessage = '';\r\n  failedMessageAdd = '';\r\n\r\n  // Preview\r\n  prev;\r\n  showPrev: boolean = false;\r\n\r\n  // Colore Caselle Input\r\n  labelValid: boolean = false;\r\n  itemValid: boolean = false;\r\n\r\n  // Checkbox\r\n  checkActiveC = 1;\r\n  checkPromoC = 1;\r\n\r\n  // Errori\r\n  smError = '';\r\n\r\n\r\n  constructor(private httpClient: HttpClient, private modalService: NgbModal, config: NgbModalConfig, private router: Router) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Controllo l'accesso\r\n    if (localStorage.getItem('apikey') != null) {\r\n      // this.getItemTemplate;\r\n      this.getItems();\r\n      this.selectedDecoration = '0';\r\n      // DataTables\r\n      this.dtOptions = {\r\n        pagingType: 'full_numbers',\r\n        pageLength: 10,\r\n        processing: true\r\n      };\r\n      this.getMatches();\r\n    } else {\r\n      this.router.navigate(['../login']);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  // Add SmartMartch - Tipo Articolo e Template\r\n  getItemTemplate() {\r\n\r\n  }\r\n\r\n  // Matches\r\n  getMatches() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/matching?recordsPerPage=999999999999', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.matchs$ = data.matching;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Templates\r\n  getItemTypeTemplate(tid: number) {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/template/itemtype/' + tid, {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        let temp = data.templates;\r\n        this.templates = temp;\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Articoli\r\n  getItems() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/item/type', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.varItem = data.itemtype;\r\n        this.selectedOption = this.varItem[0].id;\r\n        this.getItemTypeTemplate(this.selectedOption);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  // --------------------------------------------------------------------------------------------------------------------------------------------\r\n  // Funzione Elimina Match - OpenModal\r\n  open(content, d_item_id: String, d_item_a: String) {\r\n    // Passo le info dell'item da eliminare\r\n    del_item_id = d_item_id;\r\n    this.alias = d_item_a;\r\n    // Mostro il Modal per la conferma\r\n    this.modalService.open(content, {\r\n      ariaLabelledBy: 'modal-basic-title'\r\n    })\r\n  }\r\n\r\n  // API DELETE SM\r\n  deleteItem(): void {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    this.httpClient.delete(environment.URL_ROOT + '/matching/' + del_item_id, {\r\n      headers\r\n    }).subscribe(data => {\r\n      this.modalService.dismissAll();\r\n      this.showAlert();\r\n      this.getMatches();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  // Rerender Tabella\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.destroy();\r\n    });\r\n  }\r\n\r\n\r\n  // Aggiungi SmartMatch ----------------------------------------------------------------------------\r\n  addSm(template_name, label_id: string, decorators) {\r\n    // Header\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n    // Parametri\r\n    let params = new HttpParams()\r\n      .set('items[0]', this.testItem) // TEMP\r\n      .set('template_name', template_name)\r\n      .set('label_id', label_id)\r\n      .set('is_active', this.checkActiveC.toString())\r\n      .set('bypass_promo', this.checkPromoC.toString());\r\n\r\n    // Controllo se ci sono più item da aggiungere al match ---- DA CONVERTIRE IL BARCODE IN ID\r\n    let index = 1;\r\n    this.itemArray.forEach(element => {\r\n      params = params\r\n        .set('items[' + index + ']', this.itemArray[index - 1]);\r\n      index++;\r\n    });\r\n\r\n    // Decorators\r\n    if (decorators != 0) {\r\n      params = params.set('decorators[]', decorators);\r\n    }\r\n\r\n    // Aggiungo SmartMatch - Chiamata API\r\n    this.httpClient.post(environment.URL_ROOT + '/matching', params, {\r\n      headers\r\n    }).subscribe(data => {\r\n      this.getMatches();\r\n      this.showAlertAdd();\r\n      // console.log(data);\r\n    }, error => {\r\n      console.log(error);\r\n      this.smError = error.message;\r\n      this.showAlertAddFailed();\r\n    });\r\n  }\r\n\r\n\r\n  // Preview -------------------------\r\n  openPreview(id: string) {\r\n    // Header generale\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n    // Richiesta preview\r\n    this.httpClient.get(environment.URL_ROOT + '/matching/preview/' + id, {\r\n      headers,\r\n      responseType: 'text'\r\n    }).subscribe(data => {\r\n      this.prev = data;\r\n      this.showPrev = true;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  // Alerts ----------------------------------------\r\n\r\n  // Alert di Conferma DELETE\r\n  public showAlert() {\r\n    this._success.subscribe(message => this.successMessage = message);\r\n    this._success.pipe(\r\n      debounceTime(5000)\r\n    ).subscribe(() => this.successMessage = '');\r\n    this._success.next('Match ' + this.alias + ' rimosso con successo!');\r\n  }\r\n\r\n  // Alert Conferma POST\r\n  public showAlertAdd() {\r\n    this._successAdd.subscribe(message => this.successMessageAdd = message);\r\n    this._successAdd.pipe(\r\n      debounceTime(5000)\r\n    ).subscribe(() => this.successMessageAdd = '');\r\n\r\n    this._successAdd.next('SmartMatch creato correttamente!');\r\n  }\r\n  // Alert Errore POST\r\n  public showAlertAddFailed() {\r\n    this._failedAdd.subscribe(message => this.failedMessageAdd = message);\r\n    this._failedAdd.pipe(\r\n      debounceTime(5000)\r\n    ).subscribe(() => this.failedMessageAdd = '');\r\n\r\n    this._failedAdd.next('Errore! Impossibile create lo SmartMatch. Codice: ' + this.smError);\r\n  }\r\n\r\n\r\n  // CHECK ETICHETTE\r\n  ngOnChanges(id: string) {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/labelinfo?recordsPerPage=999999999999', {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        for (let index = 0; index < data.label_info.length; index++) {\r\n          let temp = data.label_info[index].LabelId;\r\n          if (temp == id) {\r\n            this.labelValid = true;\r\n            break;\r\n          } else {\r\n            this.labelValid = false;\r\n          }\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Controllo se il barcode (principale) esiste\r\n  ngOnChangesItem(id: string, template: string) {\r\n    let itemId;\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    // Verifico che esista il barcode sia corretto e ne prendo l'ID\r\n    this.httpClient.get(environment.URL_ROOT + '/item/search/fastmatch/' + template + '/' + id, {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        itemId = data.id;\r\n        this.testItem = itemId;\r\n        this.itemValid = true;\r\n        this.httpClient.get(environment.URL_ROOT + '/item/concrete/' + this.testItem, {\r\n            headers\r\n          })\r\n          // Chiamata per prendere il nome dell'articolo\r\n          .toPromise().then((data: any) => {\r\n            this.testItemName = data.reserved_alias;\r\n          });\r\n      }, error => {\r\n        this.itemValid = false;\r\n      });\r\n  }\r\n\r\n\r\n  // Add More Items\r\n  moreItem() {\r\n    this.nrItems = this.nrItems + 1;\r\n  }\r\n\r\n  counter(i: number) {\r\n    return new Array(i);\r\n  }\r\n\r\n\r\n  // Funzione per ottenere le informazioni degli item collegati ai barcode aggiunti\r\n  ngOnChangesMoreItem(template: string, index) {\r\n    let itemId;\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    let newItem = (document.getElementById(\"item_barcode_\" + index) as HTMLInputElement).value;\r\n\r\n\r\n    // Verifico che esista il barcode sia corretto e ne prendo l'ID\r\n    this.httpClient.get(environment.URL_ROOT + '/item/search/fastmatch/' + template + '/' + newItem, {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        itemId = data.id;\r\n        this.itemArray[index] = itemId;\r\n        // this.testItem = itemId;\r\n        // this.itemValid = true;\r\n        this.httpClient.get(environment.URL_ROOT + '/item/concrete/' + this.testItem, {\r\n          headers\r\n        })\r\n        // Chiamata per prendere il nome dell'articolo\r\n        //.toPromise().then((data: any) => {\r\n        //  this.testItemName = data.reserved_alias;\r\n        //});\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Zpc3VhbGl6emFydGljb2xvL3Zpc3VhbGl6emFydGljb2xvLmNvbXBvbmVudC5jc3MifQ== */\"","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  HttpClient,\r\n  HttpParams,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport {\r\n  environment\r\n} from './../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-visualizzarticolo',\r\n  templateUrl: './visualizzarticolo.component.html',\r\n  styleUrls: ['./visualizzarticolo.component.css']\r\n})\r\nexport class VisualizzarticoloComponent implements OnInit {\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  //form\r\n  editItem;\r\n\r\n  // Var\r\n  item_id;\r\n  parametri$: any[] = [];\r\n  valori$: any[] = [];\r\n  nomeArticolo;\r\n\r\n  matchs$ = [];\r\n\r\n  // Preview\r\n  prevA;\r\n  prev: string = '';\r\n  showPrev: boolean = false;\r\n\r\n  // Update\r\n  currentFields$;\r\n\r\n  ngOnInit(): void {\r\n    // Controllo l'accesso\r\n    if (localStorage.getItem('item_id') != null || localStorage.getItem('item_id') != '') {\r\n      this.item_id = localStorage.getItem('item_id');\r\n      this.getDetails();\r\n      this.getMatch();\r\n    } else {\r\n      this.router.navigate(['../articoli']);\r\n    }\r\n  }\r\n\r\n  // Richiesta API dettagli articolo\r\n  getDetails() {\r\n    // Header generale\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/item/concrete/' + this.item_id, {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        this.currentFields$ = data.current_fields;\r\n        this.parametri$ = Object.keys(data.current_fields);\r\n        this.valori$ = data.current_fields;\r\n        this.nomeArticolo = data.current_fields.ArticoloDes;\r\n        // console.log(this.valori$);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // API GET  matching\r\n  getMatch() {\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    this.httpClient.get(environment.URL_ROOT + '/matching/item/' + this.item_id, {\r\n        headers\r\n      })\r\n      .toPromise().then((data: any) => {\r\n        let temp_data = data.matching;\r\n        this.matchs$ = temp_data;\r\n        // console.log(this.matchs$)\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // Preview \r\n  openPreview(id) {\r\n    // Header generale\r\n    let headers = new HttpHeaders().set('apikey', localStorage.getItem('apikey'));\r\n    headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n    // Richiesta preview\r\n    this.httpClient.get(environment.URL_ROOT + '/matching/preview/' + id, {\r\n      headers,\r\n      responseType: 'text'\r\n    }).subscribe(data => {\r\n      this.prev = data;\r\n      this.showPrev = true;\r\n      // console.log(this.prev);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  // Update Item\r\n  updateItem() {\r\n    const headers = new HttpHeaders()\r\n      .set('apikey', localStorage.getItem('apikey'))\r\n      .set('Content-Type', 'application/json');\r\n\r\n    let formData = new HttpParams();\r\n    for (let index = 0; index < this.parametri$.length; index++) {\r\n      // let temp = this.parametri$[index].toString();\r\n      var inputValue = ( < HTMLInputElement > document.getElementById(this.parametri$[index])).value;\r\n\r\n      formData = formData.append('fields[' + this.parametri$[index] + ']', inputValue);\r\n    }\r\n\r\n    // Richiesta - Errore 403*\r\n    this.httpClient.post(environment.URL_ROOT + '/item/concrete/update/' + this.item_id, {\r\n        headers,\r\n        params: formData\r\n      })\r\n      .subscribe((data: any) => {\r\n        this.getDetails();\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  // Pulsante Annulla\r\n  goBack() {\r\n    this.router.navigateByUrl('/articoli');\r\n  }\r\n\r\n}","export class System {\r\n    constructor(\r\n        public smartikette_version: any,\r\n        public system_boot_time: string,\r\n        public system_disk_total_space: any,\r\n        public system_disk_free_space: any, \r\n        public php_version: string,\r\n        public apache_version: string, \r\n        public apache_uptime: string, \r\n        public mariadb_version: string, \r\n        public mariadb_uptime: string, \r\n        public mongodb_version: string, \r\n        public mongodb_uptime: string, \r\n    ) {} \r\n}"],"sourceRoot":"webpack:///"}